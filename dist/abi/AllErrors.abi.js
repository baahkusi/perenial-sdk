"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AllErrorsAbi = void 0;
exports.AllErrorsAbi = [{ "inputs": [], "name": "ControllerGroupBalancedError", "type": "error" }, { "inputs": [], "name": "ControllerInvalidRebalanceConfigError", "type": "error" }, { "inputs": [], "name": "ControllerInvalidRebalanceGroupError", "type": "error" }, { "inputs": [], "name": "ControllerInvalidRebalanceMarketsError", "type": "error" }, { "inputs": [], "name": "ControllerInvalidRebalanceTargetsError", "type": "error" }, { "inputs": [], "name": "ControllerInvalidSignerError", "type": "error" }, { "inputs": [{ "internalType": "contract IMarket", "name": "market", "type": "address" }, { "internalType": "uint256", "name": "group", "type": "uint256" }], "name": "ControllerMarketAlreadyInGroupError", "type": "error" }, { "inputs": [], "name": "ControllerNotOperatorError", "type": "error" }, { "inputs": [{ "internalType": "contract IMarket", "name": "market", "type": "address" }], "name": "ControllerUnsupportedMarketError", "type": "error" }, { "inputs": [], "name": "FactoryNotInstanceError", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "Fixed6OverflowError", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "version", "type": "uint256" }], "name": "InitializableAlreadyInitializedError", "type": "error" }, { "inputs": [], "name": "InitializableNotInitializingError", "type": "error" }, { "inputs": [], "name": "InitializableZeroVersionError", "type": "error" }, { "inputs": [], "name": "OwnableAlreadyInitializedError", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "OwnableNotOwnerError", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "OwnableNotPendingOwnerError", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "PausableNotPauserError", "type": "error" }, { "inputs": [], "name": "PausablePausedError", "type": "error" }, { "inputs": [{ "internalType": "int256", "name": "value", "type": "int256" }], "name": "UFixed18UnderflowError", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "version", "type": "uint256" }], "name": "UInitializableAlreadyInitializedError", "type": "error" }, { "inputs": [], "name": "UInitializableNotInitializingError", "type": "error" }, { "inputs": [], "name": "UInitializableZeroVersionError", "type": "error" }, { "inputs": [], "name": "KeeperFactoryAlreadyCreatedError", "type": "error" }, { "inputs": [], "name": "KeeperFactoryInvalidIdError", "type": "error" }, { "inputs": [], "name": "KeeperFactoryInvalidParameterError", "type": "error" }, { "inputs": [], "name": "KeeperFactoryInvalidPayoffError", "type": "error" }, { "inputs": [], "name": "KeeperFactoryInvalidSettleError", "type": "error" }, { "inputs": [], "name": "KeeperFactoryNotCreatedError", "type": "error" }, { "inputs": [], "name": "KeeperFactoryNotInstanceError", "type": "error" }, { "inputs": [], "name": "KeeperFactoryVersionOutsideRangeError", "type": "error" }, { "inputs": [], "name": "KeeperOracleParameterStorageInvalidError", "type": "error" }, { "inputs": [], "name": "DivisionByZero", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "InstanceNotFactoryError", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }], "name": "InstanceNotOwnerError", "type": "error" }, { "inputs": [], "name": "InstancePausedError", "type": "error" }, { "inputs": [], "name": "KeeperOracleInvalidCallbackError", "type": "error" }, { "inputs": [], "name": "KeeperOracleInvalidPriceError", "type": "error" }, { "inputs": [], "name": "KeeperOracleNoPriorRequestsError", "type": "error" }, { "inputs": [], "name": "KeeperOracleNotOracleError", "type": "error" }, { "inputs": [], "name": "KeeperOracleVersionOutsideRangeError", "type": "error" }, { "inputs": [], "name": "OracleProviderUnauthorizedError", "type": "error" }, { "inputs": [], "name": "PriceResponseStorageInvalidError", "type": "error" }, { "inputs": [{ "internalType": "int256", "name": "value", "type": "int256" }], "name": "UFixed6UnderflowError", "type": "error" }, { "inputs": [], "name": "ManagerCannotCancelError", "type": "error" }, { "inputs": [], "name": "ManagerCannotExecuteError", "type": "error" }, { "inputs": [], "name": "ManagerCannotReduceMaxFee", "type": "error" }, { "inputs": [], "name": "ManagerInvalidOrderNonceError", "type": "error" }, { "inputs": [], "name": "ManagerInvalidSignerError", "type": "error" }, { "inputs": [], "name": "ManagerNotOperatorError", "type": "error" }, { "inputs": [], "name": "TriggerOrderInvalidError", "type": "error" }, { "inputs": [], "name": "TriggerOrderStorageInvalidError", "type": "error" }, { "inputs": [], "name": "Adiabatic6ZeroScaleError", "type": "error" }, { "inputs": [], "name": "GlobalStorageInvalidError", "type": "error" }, { "inputs": [], "name": "LocalStorageInvalidError", "type": "error" }, { "inputs": [], "name": "LocalStorageInvalidError", "type": "error" }, { "inputs": [], "name": "MarketClosedError", "type": "error" }, { "inputs": [], "name": "MarketCollateralBelowLimitError", "type": "error" }, { "inputs": [], "name": "MarketEfficiencyUnderLimitError", "type": "error" }, { "inputs": [], "name": "MarketExceedsPendingIdLimitError", "type": "error" }, { "inputs": [], "name": "MarketInsufficientCollateralError", "type": "error" }, { "inputs": [], "name": "MarketInsufficientLiquidityError", "type": "error" }, { "inputs": [], "name": "MarketInsufficientMarginError", "type": "error" }, { "inputs": [], "name": "MarketIntentPriceDeviationError", "type": "error" }, { "inputs": [], "name": "MarketInvalidIntentFeeError", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "code", "type": "uint256" }], "name": "MarketInvalidMarketParameterError", "type": "error" }, { "inputs": [], "name": "MarketInvalidProtectionError", "type": "error" }, { "inputs": [], "name": "MarketInvalidReferrerError", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "code", "type": "uint256" }], "name": "MarketInvalidRiskParameterError", "type": "error" }, { "inputs": [], "name": "MarketMakerOverLimitError", "type": "error" }, { "inputs": [], "name": "MarketNotCoordinatorError", "type": "error" }, { "inputs": [], "name": "MarketNotOperatorError", "type": "error" }, { "inputs": [], "name": "MarketNotSingleSidedError", "type": "error" }, { "inputs": [], "name": "MarketOperatorNotAllowedError", "type": "error" }, { "inputs": [], "name": "MarketOverCloseError", "type": "error" }, { "inputs": [], "name": "MarketParameterStorageInvalidError", "type": "error" }, { "inputs": [], "name": "MarketProtectedError", "type": "error" }, { "inputs": [], "name": "MarketSettleOnlyError", "type": "error" }, { "inputs": [], "name": "MarketStalePriceError", "type": "error" }, { "inputs": [], "name": "PositionStorageLocalInvalidError", "type": "error" }, { "inputs": [], "name": "ReentrancyGuardReentrantCallError", "type": "error" }, { "inputs": [], "name": "RiskParameterStorageInvalidError", "type": "error" }, { "inputs": [], "name": "VersionStorageInvalidError", "type": "error" }, { "inputs": [], "name": "FactoryAlreadyRegisteredError", "type": "error" }, { "inputs": [], "name": "FactoryInvalidOracleError", "type": "error" }, { "inputs": [], "name": "FactoryInvalidPayoffError", "type": "error" }, { "inputs": [], "name": "MarketFactoryInvalidReferralFeeError", "type": "error" }, { "inputs": [], "name": "MarketFactoryInvalidSignerError", "type": "error" }, { "inputs": [], "name": "ProtocolParameterStorageInvalidError", "type": "error" }, { "inputs": [], "name": "ProtocolParameterStorageInvalidError", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "Fixed18OverflowError", "type": "error" }, { "inputs": [], "name": "MultiInvokerCantExecuteError", "type": "error" }, { "inputs": [], "name": "MultiInvokerInvalidInstanceError", "type": "error" }, { "inputs": [], "name": "MultiInvokerInvalidOrderError", "type": "error" }, { "inputs": [], "name": "MultiInvokerMaxFeeExceededError", "type": "error" }, { "inputs": [], "name": "MultiInvokerOrderMustBeSingleSidedError", "type": "error" }, { "inputs": [], "name": "MultiInvokerUnauthorizedError", "type": "error" }, { "inputs": [], "name": "OracleNotBeneficiaryError", "type": "error" }, { "inputs": [], "name": "OracleNotMarketError", "type": "error" }, { "inputs": [], "name": "OracleNotSubOracleError", "type": "error" }, { "inputs": [], "name": "OracleOutOfOrderCommitError", "type": "error" }, { "inputs": [], "name": "OracleOutOfSyncError", "type": "error" }, { "inputs": [], "name": "OracleFactoryAlreadyCreatedError", "type": "error" }, { "inputs": [], "name": "OracleFactoryInvalidIdError", "type": "error" }, { "inputs": [], "name": "OracleFactoryNotCreatedError", "type": "error" }, { "inputs": [], "name": "OracleFactoryNotRegisteredError", "type": "error" }, { "inputs": [], "name": "OracleParameterStorageInvalidError", "type": "error" }, { "inputs": [], "name": "AccountStorageInvalidError", "type": "error" }, { "inputs": [], "name": "AccountStorageInvalidError", "type": "error" }, { "inputs": [], "name": "CheckpointStorageInvalidError", "type": "error" }, { "inputs": [], "name": "CheckpointStorageInvalidError", "type": "error" }, { "inputs": [], "name": "MakerStrategyInsufficientAssetsError", "type": "error" }, { "inputs": [], "name": "MakerStrategyInsufficientAssetsError", "type": "error" }, { "inputs": [], "name": "MakerStrategyInsufficientCollateralError", "type": "error" }, { "inputs": [], "name": "MakerStrategyInsufficientCollateralError", "type": "error" }, { "inputs": [], "name": "MappingStorageInvalidError", "type": "error" }, { "inputs": [], "name": "RegistrationStorageInvalidError", "type": "error" }, { "inputs": [], "name": "RegistrationStorageInvalidError", "type": "error" }, { "inputs": [], "name": "VaultAggregateWeightError", "type": "error" }, { "inputs": [], "name": "VaultCurrentOutOfSyncError", "type": "error" }, { "inputs": [], "name": "VaultDepositLimitExceededError", "type": "error" }, { "inputs": [], "name": "VaultExistingOrderError", "type": "error" }, { "inputs": [], "name": "VaultIncorrectAssetError", "type": "error" }, { "inputs": [], "name": "VaultInsufficientMinimumError", "type": "error" }, { "inputs": [], "name": "VaultMarketDoesNotExistError", "type": "error" }, { "inputs": [], "name": "VaultMarketExistsError", "type": "error" }, { "inputs": [], "name": "VaultNotMarketError", "type": "error" }, { "inputs": [], "name": "VaultNotOperatorError", "type": "error" }, { "inputs": [], "name": "VaultNotSingleSidedError", "type": "error" }, { "inputs": [], "name": "VaultParameterStorageInvalidError", "type": "error" }, { "inputs": [], "name": "VaultParameterStorageInvalidError", "type": "error" }, { "inputs": [], "name": "VaultRedemptionLimitExceededError", "type": "error" }, { "inputs": [], "name": "VerifierInvalidDomainError", "type": "error" }, { "inputs": [], "name": "VerifierInvalidExpiryError", "type": "error" }, { "inputs": [], "name": "VerifierInvalidGroupError", "type": "error" }, { "inputs": [], "name": "VerifierInvalidNonceError", "type": "error" }, { "inputs": [], "name": "VerifierInvalidSignatureError", "type": "error" }, { "inputs": [], "name": "VerifierInvalidSignerError", "type": "error" }];
